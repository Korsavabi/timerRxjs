{"version":3,"sources":["Component/Timer.js","App.js","index.js"],"names":["Timer","useState","sec","setSec","status","setStatus","unsubscribe$","Subject","useEffect","interval","pipe","takeUntil","subscribe","val","next","complete","start","React","useCallback","reset","wait","click","fromEvent","document","buffer","debounceTime","map","list","length","filter","x","Date","toISOString","slice","onClick","App","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"kRAsDeA,EA/CD,WAAO,IAAD,EACMC,mBAAS,GADf,mBACTC,EADS,KACJC,EADI,OAEYF,mBAJjB,GAEK,mBAETG,EAFS,KAEDC,EAFC,KAGVC,EAAe,IAAIC,IAEzBC,qBAAU,WAQR,OAPAC,YAAS,KACNC,KAAKC,YAAUL,IACfM,WAAU,WACM,QAAXR,GACFD,GAAO,SAAAU,GAAG,OAAIA,EAAM,UAGnB,WACLP,EAAaQ,OACbR,EAAaS,cAEd,CAACX,IAEJ,IAAMY,EAAQC,IAAMC,aAAY,WAC9Bb,EAAU,SACT,IAEGc,EAAQF,IAAMC,aAAY,WAC9Bb,EAAU,OACVF,EAAO,KACN,IAEGiB,EAAOH,IAAMC,aAAY,WAC3B,IAAMG,EAAQC,YAAUC,SAAU,SAClCF,EAAMX,KACFc,YAAOH,EAAMX,KAAKe,YAAa,OAC/BC,aAAI,SAAAC,GAAI,OAAIA,EAAKC,UACjBC,aAAO,SAAAC,GAAC,OAAU,IAANA,MACVlB,WAAU,SAAAkB,GAAC,OAAIzB,EAAUyB,QAC5B,IAEP,OACE,gCACE,wCAAW,IAAIC,KAAK7B,GAAK8B,cAAcC,MAAM,GAAI,OACjD,wBAAQC,QAASlB,EAAjB,mBACA,wBAAQkB,QAASd,EAAjB,kBACA,wBAAQc,QAASf,EAAjB,uBCvCOgB,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNC,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASiB,eAAe,W","file":"static/js/main.ec361e45.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { fromEvent, interval, Subject } from \"rxjs\";\r\nimport { takeUntil, debounceTime, buffer, filter, map } from \"rxjs/operators\";\r\n \r\nconst Status = \"run\" | \"stop\" | \"wait\";\r\n\r\nconst Timer = () => {\r\n    const [sec, setSec] = useState(0);\r\n    const [status, setStatus] = useState(Status);\r\n    const unsubscribe$ = new Subject();\r\n   \r\n    useEffect(() => {\r\n      interval(1000)\r\n        .pipe(takeUntil(unsubscribe$))\r\n        .subscribe(() => {\r\n          if (status === \"run\") {\r\n            setSec(val => val + 1000);\r\n          }\r\n        });\r\n      return () => {\r\n        unsubscribe$.next();\r\n        unsubscribe$.complete();\r\n      };\r\n    }, [status]);\r\n   \r\n    const start = React.useCallback(() => {\r\n      setStatus(\"run\");\r\n    }, []);\r\n   \r\n    const reset = React.useCallback(() => {\r\n      setStatus(\"run\");\r\n      setSec(0);\r\n    }, []);\r\n   \r\n    const wait = React.useCallback(() => {\r\n        const click = fromEvent(document, 'click')\r\n        click.pipe(\r\n            buffer(click.pipe(debounceTime(300))),\r\n            map(list => list.length),\r\n            filter(x => x === 2 )\r\n            ).subscribe(x => setStatus(x))\r\n        }, []);\r\n\r\n    return (\r\n      <div>\r\n        <h1>Timer {new Date(sec).toISOString().slice(11, 19)}</h1>\r\n        <button onClick={start}>Start</button>\r\n        <button onClick={wait}>Wait</button>\r\n        <button onClick={reset}>Reset</button>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Timer;","import './App.css';\r\nimport Timer from './Component/Timer.js';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Timer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nReactDOM.render(\r\n\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}